*{
  box-sizing: border-box;
  background-origin: border-box;
  margin: 0;
}

/* Basis for colour palette comes from 1bit Monitor Glow Palette by Polyducks */
/* https://lospec.com/palette-list/1bit-monitor-glow */


/* volume slider inspo https://www.google.com/search?q=how+to+create+a+slider+that+adjusts+volume+in+html+css&rlz=1C5CHFA_enAU1068AU1068&oq=how+to+create+a+slider+that+adjusts+volume+in+html+css+&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIHCAEQIRigATIHCAIQIRigAdIBCTE0MzMwajBqN6gCALACAA&sourceid=chrome&ie=UTF-8#fpstate=ive&vld=cid:735c3ea5,vid:L5rnkFNSnE8,st:0  */

/* you're welcome to change the colours if you want or any of the other general page style */
:root{
  --col-01:#222323;
  --col-02:#f0f6f0;
  --col-03:#3081d8;
  --col-04:#b6e878;
  --col-05:#bcbdbc;
  --col-06:#6f6f6f;
  --border: 1px solid var(--col-02);
}

.audio-player-wrapper{
  display: flex;
  flex-direction: column;
  width: 100%;
  margin: 0 auto;
}

/* because I want to overlay the play icon on the audio they need to be in their own wrapper */
.audio-element-wrapper{
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
}

#audioElement{
  width: 100%;
  grid-column: 1/2;
  grid-row: 1/2;
}

#heroImage{
  width: 100%;
  grid-column: 1/2;
  grid-row: 1/2;
}

#audioPlayOverlay{
  width: 8rem;
  height: 8rem;
  grid-column: 1/2;
  grid-row: 1/2;
  justify-self: center;
  align-self: center;
  opacity: 0.6;
  pointer-events: none;
  /* display: none; */
}

.audio-controls-wrapper{
  display: flex;
  justify-content: center;
}
/* this overwrites the above display:flex - something which is then undone when the JS loads */
#controlsWrapper{
  display: none;
}

.audio-control-button{
  width: 2rem;
  height: 2rem;
  padding: .1rem;
  border: none;
  cursor: pointer;
}


.audio-control-button:hover{
  background-color: var(--col-03);
}
.audio-control-button:active{
  background-color: var(--col-06);
}
.button-icon{
  pointer-events: none;
}

#playButton{
  background-image: url('./icons/play.svg');
}

#muteButton{
  background-image: url('./icons/mute.svg');
}

.audio-progress-bar{
  /* Reset the default appearance */
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: none;
  height: 2rem;
  flex-grow: 1;
  cursor: pointer;
  background-color: var(--col-03);
  box-shadow: 0 1px 2px var(--col-02) inset;
}
::-moz-progress-bar {
  background-color: var(--col-03);
}

::-webkit-progress-bar {
  background-color: var(--col-03);
  box-shadow: 0 1px 2px var(--col-02) inset;
}
::-webkit-progress-value {
  background-color: var(--col-02);
}

.timeline-loading{
  background-image: -moz-repeating-linear-gradient(45deg, var(--col-03) 0% 2%, transparent 2% 4%, red 4%);
  background-size: 200% 100%;
  animation: loadingAnimation 4s linear infinite;
}

@keyframes loadingAnimation {
  100%{
    background-position: 50% 0%;
  }
}

/* the purpose of djset and c1 was to create a djset. However I could not figure, in time, how the circle (c1/2) could stay, relatively, on the same spot. I tried with relative and absolute position but it didnt work for me. So, the idea is there and on a certain width of the screen it looks like a djset. */
.djset{
  background-color: var(--col-01);
  width: 200%;
  height: 11rem;
  position: relative;    
  transform: translate(-50%, -132%);
}

#c1{
  position: relative;
  top: 5rem;
  width: 9rem;
  height: 9rem;
  border-radius: 100%;
  background: var(--col-03);
  transform: translate(750%, -325%) ;
}
#c2{
  position: relative;
  top: 5rem;
  width: 9rem;
  height: 9rem;
  border-radius: 100%;
  background:var(--col-03);
  transform: translate(350%, -425%) ;
}


.volumeSliders{
  display: none;
  background: var(--col-03);
}

/* creating a non-default slider which ranges from 0 - 100
the slider has been made black to fit the rest of the icons*/
.slider {
  -webkit-appearance: none;
  appearance: none;
  width: 20%;
  height: 5px;
  border-radius: 5px;  
  transform: translate(0%, 250%) ;
  background: #000000;
  outline: none;
  background-color: var(--col-03);
}

/* reference on how to customize the slider thumb:
https://blog.logrocket.com/creating-custom-css-range-slider-javascript-upgrades/
and from the code of audio progress bar, above 
the thumb indicates to the user how loud the volume is and how much louder it can be*/

.slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: none;
  width: 0.9rem;
  height: 0.9rem;
  flex-grow: 1;
  cursor: pointer;
  background-color: #000000;
  border-radius: 100%; 
}
